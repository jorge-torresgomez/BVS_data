// For RTC content sanitization
function sanitizeRtcOpc(rtcOpc) {
  // Remove trailing empty new lines
  // Workaround since negative lookbehind is not supported in Safari
  rtcOpc = rtcOpc.replace(/(<w:body>)?(<w:p><w:pPr><w:pStyle w:val=\\\"text\\\"\/><w:jc w:val=\\\"left\\\"\/><\/w:pPr><w:r><w:t><\/w:t><\/w:r><\/w:p>)+<\/w:body><\/w:document>\"/, function($0, $1){
      return $1 ? $0 : "<\/w:body><\/w:document>\""
  });

  // Just muliple new lines will distort the OPC that will error on load in RTC when editing
  var blankOpcDistorted = /\{\"parts\":\[\{\"partUri\":\"\/matlab\/document\.xml\",\"contentType\":\"application\/vnd\.mathworks\.matlab\.code\.document\+xml\",\"content\":\"<\?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"\?><w:document xmlns:w=\\\"http:\/\/schemas\.openxmlformats\.org\/wordprocessingml\/2006\/main\\\"><w:body><\/w:body><\/w:document>\",\"relationship\":null\}\],\"relationships\":\[\{\"relationshipType\":\"http:\/\/schemas\.mathworks\.com\/matlab\/code\/2013\/relationships\/document\",\"target\":\"\/matlab\/document\.xml\",\"relationshipId\":\"rId1\"\}\]\}/;
  var blankOpc = "{\"parts\":[{\"partUri\":\"/matlab/document.xml\",\"contentType\":\"application/vnd.mathworks.matlab.code.document+xml\",\"content\":\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><w:document xmlns:w=\\\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\\\"><w:body><w:p><w:pPr><w:pStyle w:val=\\\"text\\\"/><w:jc w:val=\\\"left\\\"/></w:pPr><w:r><w:t></w:t></w:r></w:p></w:body></w:document>\",\"relationship\":null}],\"relationships\":[{\"relationshipType\":\"http://schemas.mathworks.com/matlab/code/2013/relationships/document\",\"target\":\"/matlab/document.xml\",\"relationshipId\":\"rId1\"}]}";

  if (rtcOpc.match(blankOpcDistorted)) rtcOpc = blankOpc;

  // Convert title text to heading in the editor if present
  if (rtcOpc.match(/<w:pStyle w:val=\\\"title\\\"\/>/)) {
      var sanitizedRtcOpc = rtcOpc.replace(/<w:pStyle w:val=\\\"title\\\"\/>/,"<w:pStyle w:val=\\\"heading\\\"/>");
      // richTextEditor.placeDataInEditor(sanitizedRtcOpc);
      return sanitizedRtcOpc;
  } else {
      return rtcOpc;
  }
}

function sanitizeRtcHtml(html) {
  try {
      // Remove trailing empty new lines
      html = html.replace(/(<div class=\"paragraphNode wrappable\"><span class=\"textBox\"><span class=\"textWrapper\"><\/span><\/span><\/div>)+<\/div><\/div>$/,"<\/div><\/div>");
      // For maintaining consistent HTML for posts with just muliple trailing new lines
      var blankHtmlDistorted = /<div class = \'rtcContent\'><div class=\"SectionBlock containment\"><\/div><\/div>/;
      var blankHtml = "<div class = \'rtcContent\'><div class=\"SectionBlock containment\><div class=\"paragraphNode wrappable\"><span class=\"textBox\"><span class=\"textWrapper\"></span></span></div></div></div>";
      if (html.match(blankHtmlDistorted)) html = blankHtml;

      var htmlCopy = html;
      // Reformats incorrect profile links
      var host_name = document.location.protocol +"\/\/"+ document.location.hostname;
      var regex = new RegExp(host_name + document.location.pathname + "\(\\\?\.\*\?\)\?" + "#\(\/matlabcentral\/profile\/authors\/\\\d\+\.\*\?\(\?\=\"\|\'\)\)", 'g');
      if(html.match(regex)) {
        htmlCopy = html.replace(regex, host_name+"$2");
      }
      // Remove duplicated hyperlinks
      var sanitizedHtml = htmlCopy.replace(/("|')(http.*#.*)(\2+)\1/g,"$1$2$1");
      return sanitizedHtml;
  } catch(e) {}
  return html;
}

function generateOpcFromRawText(text) {
  let getOpcParaJoinWithPrevious = "</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val=\\\"text\\\"/><w:jc w:val=\\\"left\\\"/></w:pPr><w:r><w:t>";

  text = text.replace(new RegExp(/</, 'g'), '&lt;'); // Should be escaped else errors out when loading OPC in editor
  text = text.replace(new RegExp(/(\r\n|\n)+/, 'g'), getOpcParaJoinWithPrevious);
  text = text.replace(new RegExp(/\t/, 'g'), "\s\s"); // Replace tabs with two spaces to escape in JSON
  text = text.replace(new RegExp(/&(?!\w{2,};|#\d*;)/, 'g'), "&amp;"); // Should be escaped else errors out when loading OPC in editor
  text = text.replace(new RegExp(/\s+/, 'g'), ' ');

  return `{\"relationships\":[{\"relationshipType\":\"http://schemas.mathworks.com/matlab/code/2013/relationships/document\",\"relationshipId\":\"rId1\",\"target\":\"/matlab/document.xml\"},{\"relationshipType\":\"http://schemas.mathworks.com/matlab/code/2013/relationships/output\",\"relationshipId\":\"rId2\",\"target\":\"/matlab/output.xml\"}],\"parts\":[{\"partUri\":\"/matlab/document.xml\",\"relationship\":[],\"contentType\":\"application/vnd.mathworks.matlab.code.document+xml\",\"content\":\"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?><w:document xmlns:w=\\"http:\/\/schemas.openxmlformats.org\/wordprocessingml\/2006\/main\\"><w:body><w:p><w:pPr><w:pStyle w:val=\\"text\\"\/><\/w:pPr><w:r><w:t>${text}<\/w:t><\/w:r><\/w:p><\/w:body><\/w:document>\"},{\"partUri\":\"/matlab/output.xml\",\"contentType\":\"text/xml\",\"content\":\"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" standalone=\\"no\\" ?><embeddedOutputs><metaData><evaluationState>manual</evaluationState><layoutState>code</layoutState><outputStatus>ready</outputStatus></metaData><outputArray type=\\"array\\"/><regionArray type=\\"array\\"/></embeddedOutputs>\"}]}`;
}

// For sticky toolstrip
function partInViewport(elem) {
  let x = elem.getBoundingClientRect().left;
  let y = elem.getBoundingClientRect().top;
  let ww = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
  let hw = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
  let w = elem.clientWidth;
  let h = elem.clientHeight;
  return (
      (y < hw &&
       y + h > 0) &&
      (x < ww &&
       x + w > 0)
  );
}

$.fn.is_on_screen = function(){
  var win = $(window);
  var viewport = {
      top : win.scrollTop(),
      left : win.scrollLeft()
  };
  viewport.right = viewport.left + win.width();
  viewport.bottom = viewport.top + win.height();

  var bounds = this.offset();
  bounds.right = bounds.left + this.outerWidth();
  bounds.bottom = bounds.top + this.outerHeight();

  return (!(viewport.right < bounds.left || viewport.left > bounds.right || viewport.bottom < bounds.top || viewport.top > bounds.bottom));
};

function restoreMlcToolstrip() {
  $('.mlc_toolstrip').css({'position':'relative','top': '0px','width': $('#wrapper_rtc_editor').width() + 'px'});
}

function floatMlcToolstrip() {
  try {
    if (!$('.mlc_toolstrip').parent().hasClass("floating-toolstrip-placeholder")) $('.mlc_toolstrip').wrap('<div class="floating-toolstrip-placeholder"></div>');
    $('.mlc_toolstrip').css({'position':'fixed', 'top': getHeaderHeight()+'px', 'width': $('#wrapper_rtc_editor').width() + 'px'});
    $(".floating-toolstrip-placeholder").height($('.mlc_toolstrip').outerHeight());
    try {
      require(["dojo/topic","dijit/registry"], function(topic, registry){
        topic.publish('viewChanged');
        registry.getEnclosingWidget(rtcObj.targetParent.parentNode.firstElementChild.firstElementChild).resize();
      });
    } catch(e) {}
  } catch(e) {}
}

function getHeaderHeight() {
  var header_height = $('.sticky_header_container').height();
  if($('#header_desktop, #header_mobile').is_on_screen()) {
    var scroll_pos = $(window).scrollTop();
    var top_header_height = $('#header_desktop').is_on_screen() ? $('#header_desktop').height() : $('#header_mobile').height();
    var header_offset_height = (top_header_height - scroll_pos > 0) ? top_header_height - scroll_pos : top_header_height;
    header_height += header_offset_height;
  }
  return header_height;
}

$(window).on("resize scroll",function(e){
  var inner_editor = $('#wrapper_rtc_editor');
  if(inner_editor.length && $('.rtc_editor_with_toolstrip').hasClass('mlc_sticky')) {
    if(partInViewport(inner_editor.get(0))) {
      if ($(inner_editor).offset().top < ($(window).scrollTop() + getHeaderHeight() + $('.mlc_toolstrip').height()) && 
      ($(inner_editor).offset().top + $(inner_editor).outerHeight() - 30 ) > ($(window).scrollTop() + getHeaderHeight() + $('.mlc_toolstrip').height() ) ) {
        floatMlcToolstrip();
      } else {
        restoreMlcToolstrip();
      }
    } else {
        restoreMlcToolstrip();
    }
  }
});

// For mentions highlight
$(window).on('load', function() {
  try {
    const queryString = window.location.search;
    const urlParams = new URLSearchParams(queryString);
    if(urlParams.has('mentions')) {
      if(window.location.hash.length) {
        var mentions_entity_id = "#body_" + window.location.hash.match(/#((answer|comment)_\d+)/)[1];
      }
      else {
        var mentions_entity_id = "#body_question_" + window.location.href.match(/\/(\d+)/)[1];
      }
      $(mentions_entity_id).parent().addClass('mentions_highlight');
    }
  } catch(e) {}

  var retry_counts = 20;
  var waitForEl = function(selector, callback) {
    if (jQuery(selector).length) {
      callback();
    } else {
      if (retry_counts) {
        setTimeout(function() {
          retry_counts -= 1;
          waitForEl(selector, callback);
        }, 1000);
      }
    }
  };

  waitForEl('.overlay_editor_foreground', function() {
    setTimeout(function() {
      if($._data($('#popover-help-div1')[0], "events") == undefined && $._data($('.overlay_editor_foreground')[0], "events") == undefined) $('.overlay_editor_foreground').remove();
    },500);
  });

});
