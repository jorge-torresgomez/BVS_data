/* These styles customize the diagnostic message that is used by both warning and error outputs. */
 
.rtcContent .diagnosticMessage-wrapper {
  padding-bottom: 2px;
}

.rtcContent .inlineElement .diagnosticMessage-wrapper {

}

.rtcContent .rightPaneElement .diagnosticMessage-wrapper {
  padding-top: 2px;
  padding-left: 9px;
}

.rtcContent .rightPaneElement,
.rtcContent .inlineElement {
  cursor: default; /* g1244269, g1208791 - Cursor should be an arrow for outputs */
}

.diagnosticMessage-wrapper.diagnosticMessage-errorType {
  color: rgb(230,0,0);
}
.diagnosticMessage-wrapper .diagnosticMessage-messagePart, .diagnosticMessage-wrapper .diagnosticMessage-causePart {
  white-space: pre-wrap;
}
/*Set styling of scrollbars */
.rtcContent .eoOutputWrapper::-webkit-scrollbar,
.rtcContent .eoOutputWrapper *::-webkit-scrollbar,
.rtcDataTipElement.scrollableOutput::-webkit-scrollbar {
  /*Set thickness of vertical and horizontal scrollbars*/
  width: 11px;
  height: 11px;
}

.rtcContent .eoOutputWrapper::-webkit-scrollbar-track,
.rtcContent .eoOutputWrapper *::-webkit-scrollbar-track,
.rtcDataTipElement.scrollableOutput::-webkit-scrollbar-track {
  background-color: rgba(0, 0, 0, 0);
}

.rtcContent .eoOutputWrapper::-webkit-scrollbar-corner,
.rtcContent .eoOutputWrapper *::-webkit-scrollbar-corner,
.rtcDataTipElement.scrollableOutput::-webkit-scrollbar-corner {
  background-color: rgba(0, 0, 0, 0);
}

.rtcContent .eoOutputWrapper::-webkit-scrollbar-thumb,
.rtcContent .eoOutputWrapper *::-webkit-scrollbar-thumb,
.rtcDataTipElement.scrollableOutput::-webkit-scrollbar-thumb {
  border-radius: 7px;
  background-color: rgba(0, 0, 0, 0.1);
  border: 2px solid rgba(0, 0, 0, 0);
  background-clip: padding-box;
}

.rtcContent .eoOutputWrapper::-webkit-scrollbar-thumb,
.rtcContent .eoOutputWrapper *::-webkit-scrollbar-thumb,
.rtcDataTipElement.scrollableOutput::-webkit-scrollbar-thumb {
  background-color: rgba(0, 0, 0, 0);
}

.rtcContent .eoOutputWrapper:hover::-webkit-scrollbar-thumb,
.rtcContent .eoOutputWrapper *:hover::-webkit-scrollbar-thumb,
.rtcDataTipElement.scrollableOutput:hover::-webkit-scrollbar-thumb {
  background-color: rgba(0, 0, 0, 0.1);
}

.rtcContent .eoOutputWrapper:hover::-webkit-scrollbar-thumb:hover,
.rtcContent .eoOutputWrapper *:hover::-webkit-scrollbar-thumb:hover,
.rtcDataTipElement.scrollableOutput:hover::-webkit-scrollbar-thumb:hover {
  background-color: rgba(0, 0, 0, 0.2);
}

.rtcContent .stale_output, .rtcContent .typoFixApplied {
  opacity: 0.4; /*Apply opacity separately from grayscale since IE11 doesn't support grayscale*/
  -webkit-filter: grayscale(80%);
  filter: grayscale(80%);
  pointer-events: none;
}

.rtcContent .errorRecoveryDiv {
  margin-top: 0.5rem;
  color: black;
}

.rtcContent .errorRecoveryDiv div {
}

.rtcContent .eoOutputWrapper {
  font-family: Menlo, Monaco, Consolas, "Courier New", monospace;
  font-size: 12px;
}

.rtcContent .notHitCode {
  opacity: 0.4;
}

/* Styling that is common to warnings and errors is in diagnosticOutput.css */

.rtcContent .embeddedOutputsErrorElement {
  min-height: 18px;
  max-height: 250px;
  overflow: auto;
}

.rtcContent .embeddedOutputsErrorElement.inlineElement {

}

.rtcContent .embeddedOutputsErrorElement.rightPaneElement {

}

.rtcContent .embeddedOutputsFigure {

}

.rtcContent .figureElement .figureImage {
  max-height: inherit;
  max-width:100%;
}

.rtcContent .embeddedOutputsFigure.inlineElement .figureElement {
  padding-right: 25px;    /*This is added to guarantee space always available for codegen widget*/
}


.rtcContent .inlineElement .figureElement {
position: relative;
/* Addresses g1481870 where floating palette hovers over top of axes */
padding-top: 1px;
}

.rtcContent .rightPaneElement .figureElement {
  position: relative;
  max-height: inherit;
  /*Addresses g1300912 where errordlg cuts off current output border.*/
  padding: 2px;
}

.rtcContent .embeddedOutputsMatrixElement,
.rtcContent .eoOutputWrapper .matrixElement {
  min-height: 18px;
  box-sizing: border-box;
}

.rtcContent .embeddedOutputsMatrixElement .matrixElement,
.rtcContent .eoOutputWrapper  .matrixElement,
.rtcDataTipElement .matrixElement {
  position: relative;
}

.rtcContent .matrixElement .variableValue,
.rtcDataTipElement .matrixElement .variableValue {
  white-space: pre;
  vertical-align: top;
  overflow: scroll;
}

.rtcContent .embeddedOutputsMatrixElement.inlineElement {
}

.rtcContent .embeddedOutputsMatrixElement.inlineElement .topHeaderWrapper {
  display: none;
}

.rtcContent .embeddedOutputsMatrixElement.inlineElement .veTable .body {
  padding-top: 0 !important;
  max-height: 100px;
}

.rtcContent .inlineElement .matrixElement {
  max-height: 300px;
}

.rtcContent .embeddedOutputsMatrixElement.rightPaneElement {

}

.rtcContent .rightPaneElement .matrixElement,
.rtcDataTipElement .matrixElement {
  overflow: hidden;
  padding-left: 9px;
}

.rtcContent .rightPaneElement .matrixElement {
  margin-bottom: -1px;
}

.rtcContent .embeddedOutputsMatrixElement .matrixElement .valueContainer,
.rtcContent .eoOutputWrapper .matrixElement .valueContainer,
.rtcDataTipElement .matrixElement .valueContainer {
  white-space: nowrap;
  margin-bottom: 3px;
}

.rtcContent .embeddedOutputsMatrixElement .matrixElement .valueContainer .horizontalEllipsis.hide,
.rtcContent .embeddedOutputsMatrixElement .matrixElement .verticalEllipsis.hide,
.rtcContent .eoOutputWrapper .matrixElement .valueContainer .horizontalEllipsis.hide,
.rtcContent .eoOutputWrapper .matrixElement .verticalEllipsis.hide,
.rtcDataTipElement .matrixElement .valueContainer .horizontalEllipsis.hide,
.rtcDataTipElement .matrixElement .verticalEllipsis.hide {
  display: none;
}

.embeddedOutputsVariableMatrixElement .matrixElement .valueContainer.hideEllipses .verticalEllipsis, 
.embeddedOutputsVariableMatrixElement .matrixElement .valueContainer.hideEllipses .horizontalEllipsis {
  display:none;
}

.rtcContent .embeddedOutputsMatrixElement .matrixElement .valueContainer .horizontalEllipsis,
.rtcContent .eoOutputWrapper .matrixElement .valueContainer .horizontalEllipsis {
  margin-bottom: -3px;
}

.rtcContent .eoOutputWrapper .embeddedOutputsVariableMatrixElement .matrixElement .valueContainer {
  cursor: default !important;
}

.rtcContent .busyHolder {
  top: 0;
  position: absolute;
  background: transparent;
  border: none;
  z-index: 11;
}

.rtcContent .busyHolder .progressHolder {
  top: 2px;
  position: absolute;
  background: transparent;
}

.rtcContent .busyHolder:not(.busy):not(.error) {
  height: 0 !important;
}

.rtcContent .busyHolder.busy,
.rtcContent .busyHolder.error {
  background: rgba(240, 240, 240, 1);
  border-bottom: 1px solid rgba(218, 218, 218, 1);
  box-shadow: inset -3px 0 6px -5px rgba(0, 0, 0, 1);
}

.rtcContent .busyHolder.busy .progressHolder,
.rtcContent .busyHolder.error .progressHolder {
  /* Need both of below for browser compatibility */
  cursor: pointer;
  /* < IE11*/
  cursor: hand;
}

.rtcContent .busyHolder.error .progressHolder {
  padding-left: 1px;
}

.rtcContent .donutGutter {
  fill: transparent;
  stroke: rgba(0, 0, 0, 0.1);
}

.rtcContent .donutProgress {
  stroke: rgba(0, 153, 255, 1);
  fill: transparent;
  stroke-dasharray: 0,1; /* Need to initialize dasharray to 0,1 so it will start empty */
}

.rtcContent .borderContainerWithSplitter .splitterV .splitterLineV {
  -webkit-transition: background-color 0.5s ease;
  -moz-transition: background-color 0.5s ease;
  -ms-transition: background-color 0.5s ease;
  -o-transition: background-color 0.5s ease;
  transition: background-color 0.5s ease;
}

.rtcContent .borderContainerWithSplitter .visibleSplitter,
.rtcContent .borderContainerWithSplitter .splitterV:hover .splitterLineV {
  transition: none;
  -o-transition: none;
  -ms-transition: none;
  -moz-transition: none;
  -webkit-transition: none;
}

.rtcContent .borderContainerWithSplitter .splitterV:hover .splitterLineV {
  border-left: thin solid rgb(102, 102, 102);
}

.rtcContent .borderContainerWithSplitter .splitterV .splitterLineV {
  box-shadow: none;
}

.rtcContent .borderContainerWithSplitter .splitterV {
  background-color: transparent;
  padding-left: 2px;
  padding-right: 4px;
  width: 1px;
}

.buttonPanelShift {
  margin-right: 17px;
}

/* Style scrollable regions */
.rtcContent .scrollableOutput {
  border-top: 1px solid rgba(244, 244, 244, 1);
  border-bottom: 1px solid rgba(244, 244, 244, 1);
}

/*
* If this scrollableOutput follows any other type of scrollableOutput, remove the top
* border to prevent a double thickness border. focusedOutput and selectionStart classes
* will override the color of the border, so this shouldn't apply to those classes.
*/
.rtcContent .rightPaneElement.scrollableOutput+.rightPaneElement.scrollableOutput:not(.focusedOutput):not(.selectionStart),
.rtcContent .inlineElement.scrollableOutput+.inlineElement.scrollableOutput {
  border-top-color: rgba(255, 255, 255, 0);
}

.rtcContent .rightPaneElement.scrollableOutput::-webkit-scrollbar-thumb,
.rtcContent .inlineElement.scrollableOutput::-webkit-scrollbar-thumb,
.rtcDataTipElement.scrollableOutput::-webkit-scrollbar-thumb{
  background-color: rgba(0, 0, 0, 0);
}

.rtcContent .rightPaneElement.scrollableOutput:hover::-webkit-scrollbar-thumb,
.rtcContent .inlineElement.scrollableOutput:hover::-webkit-scrollbar-thumb,
.rtcDataTipElement.scrollableOutput:hover::-webkit-scrollbar-thumb{
  background-color: rgba(0, 0, 0, 0.1);
}

.rtcContent .rightPaneElement.scrollableOutput:hover::-webkit-scrollbar-thumb:hover,
.rtcContent .inlineElement.scrollableOutput:hover::-webkit-scrollbar-thumb:hover,
.rtcDataTipElement.scrollableOutput:hover::-webkit-scrollbar-thumb:hover{
  background-color: rgba(0, 0, 0, 0.2);
}

.rtcContent .inlineElement .symbolicElement {
  margin-top: 1px;
  margin-bottom: 1px;
}

.rtcContent .rightPaneElement .symbolicElement {
  padding-top: 3px;
  padding-left: 9px;
}

.rtcContent .embeddedOutputsSymbolicElement .MathEquation {
  margin-top: 4px;
  margin-bottom: 4px;
}

.rtcContent .embeddedOutputsSymbolicElement .MathEquation.displaySymbolicElement {
  margin-left: 15px;
}

.rtcContent .embeddedOutputsSymbolicElement .MathEquation.inlineSymbolicElement {
}

.rtcContent .embeddedOutputsSymbolicElement {
  overflow-x: auto;
  overflow-y: auto;
}

.mwDefaultVisualFamily.mwRichTextComponent .embeddedOutputsSymbolicElement .mwEquationEditor.enabled {
  /* no border on equation editor in outputs */
  box-shadow: 0 0 0;
  background: #ffffff;
}

.rtcContent .embeddedOutputsTextElement,
.rtcContent .embeddedOutputsVariableStringElement {
  white-space: pre;
  word-wrap:  initial;
  min-height: 18px;
  max-height: 250px;
  overflow: auto;
}

.rtcContent .textElement,
.rtcDataTipElement .textElement {
  padding-top: 3px;
}

.rtcContent .embeddedOutputsTextElement.inlineElement,
.rtcContent .embeddedOutputsVariableStringElement.inlineElement {

}

.rtcContent .inlineElement .textElement {

}

.rtcContent .embeddedOutputsTextElement.rightPaneElement,
.rtcContent .embeddedOutputsVariableStringElement.rightPaneElement {
  min-height: 16px;
}

.rtcContent .rightPaneElement .textElement {
  padding-top: 2px;
  padding-left: 9px;
}

.rtcContent .veSpecifier {
}

.rtcContent .veContainer {
}

.rtcContent .veSpecifierBox {
  height: 400px;
  width: 500px;
}

.rtcContent .veSpecifier .veTable {
  padding-top: 3px;
  padding-bottom: 4px;
}

.rtcContent .veSpecifierBox .veSpecifier .veContainer {
  position: relative;
  width: 100%;
  height: 370px;
}

.rtcContent .veSpecifierBox .dijitDialogPaneContent {
  width: 97% !important;
  height: 88% !important;
}

.rtcContent .veSpecifier .veTable .rowHeadersWrapper {
  padding-bottom: 0;
}

.rtcContent .veSpecifier .veTable .scroller .variableEditorRenderers {
  padding-right: 3px;
  -webkit-user-select: none;  /* Chrome all / Safari all */
  -moz-user-select: none;     /* Firefox all */
  -ms-user-select: none;      /* IE 10+ */
}

.rtcContent .veSpecifier .veTable .topHeaderWrapper,
.rtcContent .veSpecifier .veTable .bottomRowHeaderWrapper {
  visibility: hidden;
  z-index: 0;
}

.rtcContent .veMetaSummary {
  font-style: italic;
}

.rtcContent .veSpecifier .veTable .scroller {
  overflow: hidden;
}

.rtcContent .veSpecifier .veTable:hover .scroller {
  overflow: auto;
}

.rtcContent .veSpecifier .veVariableName,
.rtcContent .veSpecifier .veDimensionFont {
  font-family: Menlo, Monaco, Consolas, "Courier New", monospace;
  font-size: 12px;
}

.rtcContent .veSpecifier .veVariableName {
  padding-top: 2px;
}

.rtcContent .veSpecifier .veDimensionFont {
  font-style: italic;
  color: #9A9A9A;
}

/* Set styling of scrollbars */
.rtcContent .veSpecifier .scroller::-webkit-scrollbar-track {
  background-color: white;
}

.rtcContent .veSpecifier .scroller::-webkit-scrollbar-corner {
  background-color: white;
}
/* End styling of scrollbars */

.rtcContent .veSpecifier .veTable .topRowHeaderWrapper {
  border: none;
  background-color: #F8F9FA;
}

.rtcContent .veSpecifier .mw_type_ListBase.showCellBorders,
.rtcContent .veSpecifier .veTable .topHeaderWrapper,
.rtcContent .veSpecifier .veTable .bottomRowHeaderWrapper,
.rtcContent .veSpecifier .veTable .verticalScrollSpacer,
.rtcContent .veSpecifier .veTable .horizontalScrollSpacer {
  /*Remove border around entire widget*/
  border: none;
}

.rtcContent .veSpecifier .veTable .dataScrollerNode {
  border: 1px solid #BFBFBF;
}

.rtcContent .veSpecifier .veTable .columnHeaderNode,
.rtcContent .veSpecifier .veTable .rowHeaderNode,
.rtcContent .veSpecifier .veTable .dataBody {
  font-family: Arial;
  font-size: 13px;
}

.rtcContent .veSpecifier .veTable .columnHeaderNode,
.rtcContent .veSpecifier .veTable .rowHeaderNode {
  color: #7F7F7F;
}

.rtcContent .veSpecifier .veTable .dataBody {
  color: #000000;
}

/*
Column headers are made up of draggable lines and actual headers
Apply background color to both
*/
.rtcContent .veSpecifier .veTable .columnHeaderNode .cell .drag,
.rtcContent .veSpecifier .veTable .columnHeaderNode .cell .header,
.rtcContent .veSpecifier .veTable .topHeaderWrapper,
.rtcContent .veSpecifier .veTable .bottomRowHeaderWrapper {
  background-color: #F8F9FA;
}

.rtcContent .veSpecifier .veTable .columnHeaderNode .cell .dragBorder {
  border-right: 1px solid #F8F9FA;
}

.rtcContent .veSpecifier .veTable .rowHeaderNode .cell {
  padding-top: 3px;
  text-align: center;
  border-bottom: 1px solid #F8F9FA;
}

.rtcContent .veSpecifier .veTable .dataBody .cell .plainText {
  text-align: right;
}

.rtcContent .veSpecifier .veTable .dataBody .row .cell {
  border-bottom: 1px solid #E9E9E9;
  border-right: 1px solid #E9E9E9;
}

.rtcContent .embeddedOutputsVariableElement {
  white-space: pre-wrap;
  word-wrap: break-word;
  min-height: 18px;
  max-height: 250px;
  overflow: auto;
}

.rtcContent .variableElement {

}

.rtcContent .embeddedOutputsVariableElement.inlineElement {

}

.rtcContent .inlineElement .variableElement {

}

.rtcContent .embeddedOutputsVariableElement.rightPaneElement {
  min-height: 16px;
}

.rtcContent .rightPaneElement .variableElement {
  padding-top: 2px;
  padding-left: 9px;
}

.variableNameElement {
  margin-bottom: 3px;
  display: inline-block;
}

.rtcContent .embeddedOutputsVariableTableElement .ClientViewDiv  table tr {
height: 22px;
white-space: nowrap;
}

.rtcContent .embeddedOutputsVariableTableElement .ClientViewDiv  table tr td,
.rtcContent .embeddedOutputsVariableTableElement .ClientViewDiv  table tr th {
background-color:white;
text-overflow: ellipsis;
font-family: 'Arial', sans-serif;
font-size: 12px;
overflow : hidden;
}

.rtcContent .embeddedOutputsVariableTableElement .ClientViewDiv  table tr span {
text-overflow: ellipsis;
padding: 3px;
}
.rtcContent .embeddedOutputsVariableTableElement .ClientViewDiv  table tr th {  
color: rgba(0,0,0,0.5);
padding: 3px;
font-size: 9px;
}

.rtcContent .toggleButtonPanel {
  width: 22px;
  height: auto;
  padding: 3px 3px 1px 3px;
  border-bottom: 1px solid rgba(218, 218, 218, 1);
}

.rtcContent .toggleButton {
  width: 16px;
  height: 16px;
  cursor: pointer;
  background-size: 16px 16px;
  background: no-repeat center;
  margin-left: 1px;  /* g1814758 - button icons have a 1px gap on the right side so adding a
   margin on the left to accommodate that*/
}

.rtcContent .toggleButtonPanel .mwToggleButton:not(:last-child) {
  margin-bottom: 2px;
}

.rtcContent .toggleButtonPanel .mwToggleButton {
  height: 22px;
}

.rtcContent .rightMarginContainer .toggleButtonPanel .mwToggleButton.mwToggleButtonHover:not(.mwToggleButtonChecked) {
  border-color: rgb(128, 128, 128);
}

/* Bottom button */
.rtcContent .toggleButtonPanel .mwToggleButton + .mwToggleButton {
  margin-top: -4px
}

.rtcContent .toggleButtonPanel .mwToggleButton:not(.mwToggleButtonChecked) {
  border-color: transparent;
  box-shadow: none;
}

.rtcContent .toggleButtonPanel .mwToggleButton.mwToggleButtonChecked {
  z-index: 1; /* g1892926 - Increasing the z-index of the checked button so the background is
  above the unchecked buttons shadow. */
}

/* Styling that is common to warnings and errors is in diagnosticOutput.css */

.rtcContent .embeddedOutputsWarningElement{
  min-height: 18px;
  max-height: 250px;
  overflow: auto;
}

.rtcContent .embeddedOutputsWarningElement.inlineElement {

}

.rtcContent .embeddedOutputsWarningElement.rightPaneElement {

}

/* CSS file for in-line view outputs */

/* A div around a collection of outputRegion divs for grouped outputs */
.rtcContent .outputGroup {
  margin: 2px 0 2px 0;
  padding: 2px 2px 2px 4px;
}

/* A div covering a single output widget */
.rtcContent .outputRegion {

}

.rtcContent .outputParagraph {
  color: rgba(64, 64, 64, 1);
  padding: 10px 0 6px 17px;
  background: white;
  overflow-x: hidden;
}

.rtcContent .inlineWrapper:last-child .outputParagraph {
  border-bottom-left-radius: 4px;
  border-bottom-right-radius: 4px;
}

/* Empty output paragraphs should not show up with any spacing */
.rtcContent .outputParagraph:empty {
  margin: 0;
}

.rtcContent .lineNode.selectedLine {

}

.rtcContent .outputsOnRight .rightPaneElement:not(.scrollableOutput) {
  /* This padding is used to allocate space for the border */
  padding: 1px;
}

.rtcContent .outputsOnRight .rightPaneElement.scrollableOutput {
  /*
   * Scrollable outputs already have a top and bottom border, so only
   * allocate padding for the border on the left and right.
   */
  padding: 0 1px 0 1px;
}

/* Replaces the left/right padding with a blue border for all outputs in the selection */
.rtcContent .outputsOnRight .rightPaneElement.selectedOutput {
  border-left: 1px solid rgb(217, 217, 217);
  border-right: 1px solid rgb(217, 217, 217);

  /* Remove padding since we are showing a left and right border instead */
  padding-left: 0;
  padding-right: 0;

  /* Top and bottom selections will override the border radius */
  border-radius: 0;
}

/* Replaces the top padding with a blue border for the first contiguous output of each selection */
.rtcContent .outputsOnRight .rightPaneElement.selectedOutput.selectionStart {
  border-top: 1px solid rgb(217, 217, 217);
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;

  /* Remove padding since we are showing a top border instead */
  padding-top: 0;
}

/* Replaces the bottom padding with a blue border for the last contiguous output of each selection */
.rtcContent .outputsOnRight .rightPaneElement.selectedOutput.selectionEnd {
  border-bottom: 1px solid rgb(217, 217, 217);
  border-bottom-left-radius: 4px;
  border-bottom-right-radius: 4px;

  /* Remove padding since we are showing a bottom border instead */
  padding-bottom: 0;
}

.rtcContent .outputsOnRight .rightPaneElement.focusedOutput {
  border: 1px solid rgb(0, 154, 225);
  border-radius: 4px;
  /* Remove padding since we are showing a border instead */
  padding: 0;
}

/*
* Remove rounded corners on IE Edge. This is to avoid a browser bug that causes outputs not to
* gray out when stale (g1437564).
*/
@supports (-ms-accelerator:true) {
  .rtcContent .outputsOnRight .rightPaneElement {
      border-radius: 0 !important;
  }
}

.rtcContent .outputsOnRight .rightPaneElement.highlightOnHover:hover {
  /* Use a box shadow so that we can see both the selection and the hover affordances at the same time. */
  box-shadow: inset 0 0 0 1px rgb(217, 217, 217);
}

.rtcContent .outputsOnRight .rightPaneElement.highlightOnHover:not(.selectedOutput):hover {
  border-radius: 4px;
}

/*
The outputs on the right pane
*/
.rtcContent .outputsOnRight {
  position: absolute;
  height: 100%;
  top: 0;
  overflow: hidden;
  color: black;
}

.rtcContent .imageInDialog {

}

.rtcContent .rightPaneElement {
  margin-left: 10px;
  margin-right: 10px;
}

.rtcContent .rightPaneElement .variableValue:hover {
  /*Disable value affordance until we implement pop out button.*/
  /*box-shadow: 0px 0px 5px #888888;*/
}

.rtcContent .outputsOnRight .outputContentPane {
  position: absolute;
  padding-top: 5px;
  width: 100%;
}

.rtcContent .outputsOnRight .outputScrollPane {
  position: relative;
  height: 100%;
  overflow-y: auto;
  overflow-x: hidden;
}

/*
* The following style is for the alert indicator plugin.
* If styling for this plugin grows it may be beneficial to
* introduce a separate CSS file for the plugin
*
* This style is to split a long individual word that does not fit in the tooltip
* g1110540
*/
.dijitTooltip .dijitTooltipContainer.dijitTooltipContents .alertTooltipMessage {
  word-wrap: break-word;
  min-width: 12px;
  max-width: 250px;
}

.rtcContent .scrollPane.responsiveView.codeHidden .CodeBlock.LiveControlNodeslider .inlineWrapper,
.rtcContent .scrollPane.responsiveView.codeHidden .CodeBlock.LiveControlNodecomboBox .inlineWrapper,
.rtcContent .scrollPane.responsiveView.codeHidden .CodeBlock.LiveControlNodecheckBox .inlineWrapper,
.rtcContent .scrollPane.responsiveView.codeHidden .CodeBlock.LiveControlNodeeditField .inlineWrapper,
.rtcContent .scrollPane.responsiveView.codeHidden .CodeBlock.LiveControlNodebutton .inlineWrapper {
  display: inline-block;
}

.rtcContent .CodeBlock img.figureImage.figureContainingNode {
  padding-bottom: 0px !important;
}
